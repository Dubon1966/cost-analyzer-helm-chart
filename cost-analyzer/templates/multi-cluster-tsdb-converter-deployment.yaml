{{- if .Values.multiClusterTSDBConverter.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "multiClusterTSDBConverter.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "multiClusterTSDBConverter.commonLabels" . | nindent 4 }}
  {{- with .Values.global.podAnnotations}}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "multiClusterTSDBConverter.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "multiClusterTSDBConverter.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ template "multiClusterTSDBConverter.name" . }}
    spec:
      restartPolicy: Always
      volumes:
        - name: etl-bucket-config
          secret:
            defaultMode: 420
            secretName: {{ .Values.multiClusterTSDBConverter.etlStoreSecretName }}
        - name: temp-configs
          emptyDir: {}
      serviceAccountName: {{ template "cost-analyzer.serviceAccountName" . }}
      containers:
        - name: tsdb-converter
          {{- if .Values.kubecostModel }}
          {{- if .Values.kubecostModel.openSourceOnly }}
          {{- fail "ETL Utils cannot be used with open source only" }}
          {{- else if .Values.multiClusterTSDBConverter.fullImageName }}
          image: {{ .Values.multiClusterTSDBConverter.fullImageName }}
          {{- else if .Values.kubecostModel.fullImageName }}
          image: {{ .Values.kubecostModel.fullImageName }}
          {{- else if .Values.imageVersion }}
          image: {{ .Values.kubecostModel.image }}:{{ .Values.imageVersion }}
          {{- else if eq "development" .Chart.AppVersion }}
          image: gcr.io/kubecost1/cost-model-nightly:latest
          {{- else }}
          image: {{ .Values.kubecostModel.image }}:prod-{{ $.Chart.AppVersion }}
          {{ end }}
          {{- else }}
          image: gcr.io/kubecost1/cost-model:prod-{{ $.Chart.AppVersion }}
          {{ end }}
          imagePullPolicy: Always
          ports:
          - containerPort: 9003
            name: tcp-model
            protocol: TCP
          resources:
            {{- toYaml .Values.multiClusterTSDBConverter.resources | nindent 12 }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 200
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9003
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: temp-configs
              mountPath: /var/configs
            - name: etl-bucket-config
              mountPath: /var/configs/etl
              readOnly: true
          env:
            - name: CONFIG_PATH
              value: /var/configs/
            - name: ETL_BUCKET_CONFIG
              value: /var/configs/etl/{{ .Values.multiClusterTSDBConverter.SecretFileName }}
            - name: MAX_QUERY_CONCURRENCY
              value: {{quote .Values.multiClusterTSDBConverter.maxQueryConcurrency }}
            - name: PROMETHEUS_SERVER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cost-analyzer.fullname" . }}
                  key: prometheus-server-endpoint
            - name: THANOS_QUERY_URL
              value: {{ .Values.multiClusterTSDBConverter.tsdbEndpoint }}
            - name: THANOS_QUERY_OFFSET
              value: {{ .Values.multiClusterTSDBConverter.queryOffset | default "3h" }}
            - name: THANOS_MAX_SOURCE_RESOLUTION
              value: {{ .Values.multiClusterTSDBConverter.maxSourceResolution | default "raw" }}
            - name: CLOUD_PROVIDER_API_KEY
              value: "AIzaSyDXQPG_MHUEy9neR7stolq6l0ujXmjJlvk"
            - name: CLOUD_COST_ENABLED
              value: "false"
            - name: CLUSTER_ID
              value: {{ .Values.prometheus.server.global.external_labels.cluster_id }}
            - name: ETL_RESOLUTION_SECONDS
              value: {{ quote .Values.multiClusterTSDBConverter.etlResolutionSeconds }}
            - name: ETL_MAX_PROMETHEUS_QUERY_DURATION_MINUTES
              value: {{ quote .Values.multiClusterTSDBConverter.maxPrometheusQueryDurationMinutes  }}
            - name: ETL_DAILY_STORE_DURATION_DAYS
              value: {{ quote .Values.multiClusterTSDBConverter.etlDailyStoreDurationDays }}
            - name: ETL_HOURLY_STORE_DURATION_HOURS
              value: {{ quote .Values.multiClusterTSDBConverter.etlHourlyStoreDurationHours }}
            - name: ETL_WEEKLY_STORE_DURATION_WEEKS
              value: {{ quote .Values.multiClusterTSDBConverter.etlWeeklyStoreDurationWeeks }}
            - name: UTC_OFFSET
              value: "+00:00"
            - name: ETL_FILE_STORE_ENABLED
              value: "true"
            - name: ETL_ASSET_RECONCILIATION_ENABLED
              value: "true"
            - name: DB_PATH
              value: /var/db/
            - name: RELEASE_NAME
              value: {{ .Release.Name }}
            - name: KUBECOST_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          {{- if (.Values.multiClusterTSDBConverter).env }}
          {{- range $key, $value := .Values.multiClusterTSDBConverter.env }}
            - name: {{ $key quote }}
              value: {{ $value quote }}
          {{- end }}
          {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ toYaml .Values.imagePullSecrets | indent 2 }}
    {{- end }}
      {{- with .Values.multiClusterTSDBConverter.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.multiClusterTSDBConverter.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.multiClusterTSDBConverter.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
